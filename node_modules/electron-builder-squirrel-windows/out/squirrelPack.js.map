{"version":3,"sources":["../src/squirrelPack.ts"],"names":[],"mappings":"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","sourcesContent":["import { path7za } from \"7zip-bin\"\nimport { Arch, debug, exec, log, spawn, isEmptyOrSpaces } from \"builder-util\"\nimport { copyFile, walk } from \"builder-util/out/fs\"\nimport { compute7zCompressArgs } from \"app-builder-lib/out/targets/archive\"\nimport { execWine, prepareWindowsExecutableArgs as prepareArgs } from \"app-builder-lib/out/wine\"\nimport { WinPackager } from \"app-builder-lib/out/winPackager\"\nimport { createWriteStream, ensureDir, remove, stat, unlink, writeFile } from \"fs-extra\"\nimport * as path from \"path\"\n\nconst archiver = require(\"archiver\")\n\nexport function convertVersion(version: string): string {\n  const parts = version.split(\"-\")\n  const mainVersion = parts.shift()\n  if (parts.length > 0) {\n    return [mainVersion, parts.join(\"-\").replace(/\\./g, \"\")].join(\"-\")\n  }\n  else {\n    return mainVersion!\n  }\n}\n\nfunction syncReleases(outputDirectory: string, options: SquirrelOptions) {\n  log.info(\"syncing releases to build delta package\")\n  const args = prepareArgs([\"-u\", options.remoteReleases!, \"-r\", outputDirectory], path.join(options.vendorPath, \"SyncReleases.exe\"))\n  if (options.remoteToken) {\n    args.push(\"-t\", options.remoteToken)\n  }\n  return spawn(process.platform === \"win32\" ? path.join(options.vendorPath, \"SyncReleases.exe\") : \"mono\", args)\n}\n\nexport interface SquirrelOptions {\n  vendorPath: string\n  remoteReleases?: string\n  remoteToken?: string\n  loadingGif?: string\n  productName: string\n  appId?: string\n  name: string\n  packageCompressionLevel?: number\n  version: string\n  msi?: any\n\n  description?: string\n  iconUrl?: string\n  authors?: string\n  extraMetadataSpecs?: string\n  copyright?: string\n}\n\nexport interface OutFileNames {\n  setupFile: string\n  packageFile: string\n}\n\nexport class SquirrelBuilder {\n  constructor(private readonly options: SquirrelOptions, private readonly outputDirectory: string, private readonly packager: WinPackager) {\n  }\n\n  async buildInstaller(outFileNames: OutFileNames, appOutDir: string, outDir: string, arch: Arch) {\n    const packager = this.packager\n    const dirToArchive = await packager.info.tempDirManager.createTempDir({prefix: \"squirrel-windows\"})\n    const outputDirectory = this.outputDirectory\n    const options = this.options\n    const appUpdate = path.join(dirToArchive, \"Update.exe\")\n    await Promise.all([\n      copyFile(path.join(options.vendorPath, \"Update.exe\"), appUpdate)\n        .then(() => packager.sign(appUpdate)),\n      Promise.all([remove(`${outputDirectory.replace(/\\\\/g, \"/\")}/*-full.nupkg`), remove(path.join(outputDirectory, \"RELEASES\"))])\n        .then(() => ensureDir(outputDirectory))\n    ])\n\n    if (isEmptyOrSpaces(options.description)) {\n      options.description = options.productName\n    }\n\n    if (options.remoteReleases) {\n      await syncReleases(outputDirectory, options)\n    }\n\n    const version = convertVersion(options.version)\n    const nupkgPath = path.join(outputDirectory, outFileNames.packageFile)\n    const setupPath = path.join(outputDirectory, outFileNames.setupFile)\n\n    await Promise.all<any>([\n      pack(options, appOutDir, appUpdate, nupkgPath, version, packager),\n      copyFile(path.join(options.vendorPath, \"Setup.exe\"), setupPath),\n      copyFile(options.loadingGif ? path.resolve(packager.projectDir, options.loadingGif) : path.join(options.vendorPath, \"install-spinner.gif\"), path.join(dirToArchive, \"background.gif\")),\n    ])\n\n    // releasify can be called only after pack nupkg and nupkg must be in the final output directory (where other old version nupkg can be located)\n    await this.releasify(nupkgPath, outFileNames.packageFile)\n      .then(it => writeFile(path.join(dirToArchive, \"RELEASES\"), it))\n\n    const embeddedArchiveFile = await this.createEmbeddedArchiveFile(nupkgPath, dirToArchive)\n\n    await execWine(path.join(options.vendorPath, \"WriteZipToSetup.exe\"), null, [setupPath, embeddedArchiveFile])\n\n    await packager.signAndEditResources(setupPath, arch, outDir)\n    if (options.msi && process.platform === \"win32\") {\n      const outFile = outFileNames.setupFile.replace(\".exe\", \".msi\")\n      await msi(options, nupkgPath, setupPath, outputDirectory, outFile)\n      // rcedit can only edit .exe resources\n      await packager.sign(path.join(outputDirectory, outFile))\n    }\n  }\n\n  private async releasify(nupkgPath: string, packageName: string) {\n    const args = [\n      \"--releasify\", nupkgPath,\n      \"--releaseDir\", this.outputDirectory\n    ]\n    const out = (await execSw(this.options, args)).trim()\n    if (debug.enabled) {\n      debug(`Squirrel output: ${out}`)\n    }\n\n    const lines = out.split(\"\\n\")\n    for (let i = lines.length - 1; i > -1; i--) {\n      const line = lines[i]\n      if (line.includes(packageName)) {\n        return line.trim()\n      }\n    }\n\n    throw new Error(`Invalid output, cannot find last release entry, output: ${out}`)\n  }\n\n  private async createEmbeddedArchiveFile(nupkgPath: string, dirToArchive: string) {\n    const embeddedArchiveFile = await this.packager.getTempFile(\"setup.zip\")\n    await exec(path7za, compute7zCompressArgs(\"zip\", {\n      isRegularFile: true,\n      compression: this.packager.compression,\n    }).concat(embeddedArchiveFile, \".\"), {\n      cwd: dirToArchive,\n    })\n    await exec(path7za, compute7zCompressArgs(\"zip\", {\n      isRegularFile: true,\n      compression: \"store\" /* nupkg is already compressed */,\n    }).concat(embeddedArchiveFile, nupkgPath))\n    return embeddedArchiveFile\n  }\n}\n\nasync function pack(options: SquirrelOptions, directory: string, updateFile: string, outFile: string, version: string, packager: WinPackager) {\n  // SW now doesn't support 0-level nupkg compressed files. It means that we are forced to use level 1 if store level requested.\n  const archive = archiver(\"zip\", {zlib: {level: Math.max(1, (options.packageCompressionLevel == null ? 9 : options.packageCompressionLevel))}})\n  const archiveOut = createWriteStream(outFile)\n  const archivePromise = new Promise((resolve, reject) => {\n    archive.on(\"error\", reject)\n    archiveOut.on(\"error\", reject)\n    archiveOut.on(\"close\", resolve)\n  })\n  archive.pipe(archiveOut)\n\n  const author = options.authors\n  const copyright = options.copyright || `Copyright © ${new Date().getFullYear()} ${author}`\n  const nuspecContent = `<?xml version=\"1.0\"?>\n<package xmlns=\"http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd\">\n  <metadata>\n    <id>${options.appId}</id>\n    <version>${version}</version>\n    <title>${options.productName}</title>\n    <authors>${author}</authors>\n    <iconUrl>${options.iconUrl}</iconUrl>\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\n    <description>${options.description}</description>\n    <copyright>${copyright}</copyright>${options.extraMetadataSpecs || \"\"}\n  </metadata>\n</package>`\n  debug(`Created NuSpec file:\\n${nuspecContent}`)\n  archive.append(nuspecContent.replace(/\\n/, \"\\r\\n\"), {name: `${options.name}.nuspec`})\n\n  //noinspection SpellCheckingInspection\n  archive.append(`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n  <Relationship Type=\"http://schemas.microsoft.com/packaging/2010/07/manifest\" Target=\"/${options.name}.nuspec\" Id=\"Re0\" />\n  <Relationship Type=\"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\" Target=\"/package/services/metadata/core-properties/1.psmdcp\" Id=\"Re1\" />\n</Relationships>`.replace(/\\n/, \"\\r\\n\"), {name: \".rels\", prefix: \"_rels\"})\n\n  //noinspection SpellCheckingInspection\n  archive.append(`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Types xmlns=\"http://schemas.openxmlformats.org/package/2006/content-types\">\n  <Default Extension=\"rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\" />\n  <Default Extension=\"nuspec\" ContentType=\"application/octet\" />\n  <Default Extension=\"pak\" ContentType=\"application/octet\" />\n  <Default Extension=\"asar\" ContentType=\"application/octet\" />\n  <Default Extension=\"bin\" ContentType=\"application/octet\" />\n  <Default Extension=\"dll\" ContentType=\"application/octet\" />\n  <Default Extension=\"exe\" ContentType=\"application/octet\" />\n  <Default Extension=\"dat\" ContentType=\"application/octet\" />\n  <Default Extension=\"psmdcp\" ContentType=\"application/vnd.openxmlformats-package.core-properties+xml\" />\n  <Default Extension=\"diff\" ContentType=\"application/octet\" />\n  <Default Extension=\"bsdiff\" ContentType=\"application/octet\" />\n  <Default Extension=\"shasum\" ContentType=\"text/plain\" />\n  <Default Extension=\"mp3\" ContentType=\"audio/mpeg\" />\n  <Default Extension=\"node\" ContentType=\"application/octet\" />\n</Types>`.replace(/\\n/, \"\\r\\n\"), {name: \"[Content_Types].xml\"})\n\n  archive.append(`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<coreProperties xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n                xmlns=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\">\n  <dc:creator>${author}</dc:creator>\n  <dc:description>${options.description}</dc:description>\n  <dc:identifier>${options.appId}</dc:identifier>\n  <version>${version}</version>\n  <keywords/>\n  <dc:title>${options.productName}</dc:title>\n  <lastModifiedBy>NuGet, Version=2.8.50926.602, Culture=neutral, PublicKeyToken=null;Microsoft Windows NT 6.2.9200.0;.NET Framework 4</lastModifiedBy>\n</coreProperties>`.replace(/\\n/, \"\\r\\n\"), {name: \"1.psmdcp\", prefix: \"package/services/metadata/core-properties\"})\n\n  archive.file(updateFile, {name: \"Update.exe\", prefix: \"lib/net45\"})\n  await encodedZip(archive, directory, \"lib/net45\", options.vendorPath, packager)\n  await archivePromise\n}\n\nfunction execSw(options: SquirrelOptions, args: Array<string>) {\n  return exec(process.platform === \"win32\" ? path.join(options.vendorPath, \"Update.com\") : \"mono\", prepareArgs(args, path.join(options.vendorPath, \"Update-Mono.exe\")), {\n    env: {\n      ...process.env,\n      SZA_PATH: path7za,\n    }\n  })\n}\n\nasync function msi(options: SquirrelOptions, nupkgPath: string, setupPath: string, outputDirectory: string, outFile: string) {\n  const args = [\n    \"--createMsi\", nupkgPath,\n    \"--bootstrapperExe\", setupPath\n  ]\n  await execSw(options, args)\n  //noinspection SpellCheckingInspection\n  await exec(path.join(options.vendorPath, \"candle.exe\"), [\"-nologo\", \"-ext\", \"WixNetFxExtension\", \"-out\", \"Setup.wixobj\", \"Setup.wxs\"], {\n    cwd: outputDirectory,\n  })\n  //noinspection SpellCheckingInspection\n  await exec(path.join(options.vendorPath, \"light.exe\"), [\"-ext\", \"WixNetFxExtension\", \"-sval\", \"-out\", outFile, \"Setup.wixobj\"], {\n    cwd: outputDirectory,\n  })\n\n  //noinspection SpellCheckingInspection\n  await Promise.all([\n    unlink(path.join(outputDirectory, \"Setup.wxs\")),\n    unlink(path.join(outputDirectory, \"Setup.wixobj\")),\n    unlink(path.join(outputDirectory, outFile.replace(\".msi\", \".wixpdb\"))).catch(e => debug(e.toString())),\n  ])\n}\n\nasync function encodedZip(archive: any, dir: string, prefix: string, vendorPath: string, packager: WinPackager) {\n  await walk(dir, null, {\n    isIncludeDir: true,\n    consume: async (file, stats) => {\n      if (stats.isDirectory()) {\n        return\n      }\n\n      const relativeSafeFilePath = file.substring(dir.length + 1).replace(/\\\\/g, \"/\")\n      archive._append(file, {\n        name: relativeSafeFilePath,\n        prefix,\n        stats,\n      })\n\n      // createExecutableStubForExe\n      // https://github.com/Squirrel/Squirrel.Windows/pull/1051 Only generate execution stubs for the top-level executables\n      if (file.endsWith(\".exe\") && !file.includes(\"squirrel.exe\") && !relativeSafeFilePath.includes(\"/\")) {\n        const tempFile = await packager.getTempFile(\"stub.exe\")\n        await copyFile(path.join(vendorPath, \"StubExecutable.exe\"), tempFile)\n        await execWine(path.join(vendorPath, \"WriteZipToSetup.exe\"), null, [\"--copy-stub-resources\", file, tempFile])\n        await packager.sign(tempFile)\n\n        archive._append(tempFile, {\n          name: relativeSafeFilePath.substring(0, relativeSafeFilePath.length - 4) + \"_ExecutionStub.exe\",\n          prefix,\n          stats: await stat(tempFile),\n        })\n      }\n    }\n  })\n  archive.finalize()\n}"],"sourceRoot":""}
